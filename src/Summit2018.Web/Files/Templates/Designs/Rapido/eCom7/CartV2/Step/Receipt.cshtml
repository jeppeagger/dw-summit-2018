@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>

@using Dynamicweb.Ecommerce.Orders
@using Dynamicweb.Ecommerce.Orders.SalesDiscounts
@using Dynamicweb.Core

@{ 
    var logoImage = "/Admin/Public/GetImage.ashx?width=200&amp;height=50&amp;crop=5&amp;Compression=75&amp;image=" + Pageview.AreaSettings.GetItem("Ecommerce").GetString("ReceiptLogoImage");

    string businessName = "";
    string businessCountry = "";
    string businessCity = "";
    string businessRegion = "";
    string businessZip = "";
    string businessAddress = "";
    string businessCVR = "";

    if (Pageview.AreaSettings.GetItem("Settings").GetItem("Address") != null)
    {
        businessName = Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("Name") != null ? Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("Name") : "";
        businessCountry = Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("Country") != null ? Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("Country") : "";
        businessCity = Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("City") != null ? Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("City") : "";
        businessRegion = Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("Region") != null ? Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("Region") : "";
        businessZip = Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("PostalCode") != null ? Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("PostalCode") : "";
        businessAddress = Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("StreetAddress") != null ? Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("StreetAddress") : "";
        businessCVR = Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("CVRNumber") != null ? Pageview.AreaSettings.GetItem("Settings").GetItem("Address").GetString("CVRNumber") : "";
    }
}

@if (!string.IsNullOrWhiteSpace(Pageview.AreaSettings.GetItem("Settings").GetString("FacebookPixelID"))) {
    <script>
      fbq('track', 'Purchase', {currency: '@GetString("Ecom:Order.Price.Currency.Code")', value: @GetDouble("Ecom:Order.Price.Price")});
    </script>
}

@if (!string.IsNullOrEmpty(Pageview.AreaSettings.GetItem("Settings").GetString("GoogleTagManagerID")))
{
    <script>
        dataLayer.push({
            'ecommerce': {
                'purchase': {
                    'actionField': {
                        'id': '@GetString("Ecom:Order.TransactionNumber")',  // Transaction ID. Required for purchases and refunds.
                        'affiliation': 'Online Store',
                        'revenue': '@GetDouble("Ecom:Order.Price.PriceWithVAT")',   // Total transaction value (incl. tax and shipping)
                        'tax':'@GetDouble("Ecom:Order.Price.VAT")',
                        'shipping': '@GetDouble("Ecom:Order.ShippingFee.Price")'
                    },
                    'products': [
                        @foreach (LoopItem orderline in GetLoop("OrderLines"))
                        {
                            var groupObject = Dynamicweb.Ecommerce.Services.ProductGroups.GetGroup(orderline.GetString("Ecom:Product.PrimaryOrFirstGroupID"));
                            <text>
                            {
                                'name': '@orderline.GetString("Ecom:Order:OrderLine.ProductName")',
                                'id': '@orderline.GetString("Ecom:Product.ID")',
                                'price': '@orderline.GetDouble("Ecom:Order:OrderLine.UnitPrice.Price")',
                                'brand': '@orderline.GetString("Ecom:Product:Field.brand.Value")',
                                'category': '@(groupObject != null ? groupObject.Name : "")',
                                'variant': '@orderline.GetString("Ecom:Order:OrderLine.ProductVariantID")',
                                'quantity': @orderline.GetInteger("Ecom:Order:OrderLine.Quantity")
                            },
                            </text>
                        }
                    ]
                }
            }
        });
    </script>
}

<div class="paragraph-container u-full-width">
    <div class="grid grid--border">
        <div class="grid__col-md-8 grid__col-sm-7 receipt__header dw-mod">
            <div class="u-margin receipt__logo dw-mod">
                <img src="@logoImage" alt="@businessName" />
            </div>
        </div>

        <div class="grid__col-md-4 grid__col-sm-5 receipt__header dw-mod">
            @if (GetBoolean("Ecom:Order.IsRecurringOrder"))
            {
                <p class="u-ta-right">@Translate("You have placed a subscription. This is a confirmation of the subscription not the actual order receipt.")</p>
            }
            <table class="table table--clean table--compact">
                <tr>
                    <td>@Translate("Order number")</td>
                    <td>@GetString("Ecom:Order.ID")</td>
                </tr>
                <tr>
                    <td>@Translate("Order date")</td>
                    <td>@GetDate("Ecom:Order.Completed").ToString(Dynamicweb.Core.Helpers.DateHelper.DateFormatStringShort)</td>
                </tr>
            </table>
        </div>

        <div class="grid__col-12 grid__col--bleed">
            <table class="table table-responsive u-no-margin u-border-bottom">
                <thead>
                    <tr>
                        <th>&nbsp;</th>
                        <th>@Translate("Product")</th>
                        <th class="u-ta-right">@Translate("Qty")</th>
                        <th class="u-ta-right">@Translate("Price")</th>
                        <th class="u-ta-right">@Translate("Total")</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (LoopItem orderline in GetLoop("OrderLines"))
                    {
                        var image = "/Admin/Public/GetImage.ashx?width=60&height=60&crop=5&image=" + orderline.GetString("Ecom:Product.ImageDefault.Default.Clean");
                        double pointsTotal = orderline.GetDouble("Ecom:Order:OrderLine.Points");
                        <tr>
                            <td width="60">
                                @if (orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                                {
                                    <img src="@image" alt="@orderline.GetString("Ecom:Order:OrderLine.ProductName")" />
                                }
                            </td>
                            <td>
                                <div>@orderline.GetString("Ecom:Order:OrderLine.ProductName")</div>
                                @if (orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                                {
                                    <div>#@orderline.GetString("Ecom:Order:OrderLine.ProductNumber")</div>
                                }
                                <div>@orderline.GetString("Ecom:Order:OrderLine.UnitName")</div>
                                <div>@orderline.GetString("Ecom:Order:OrderLine.ProductVariantText")</div>
                            </td>
                            <td class="u-ta-right">
                                @if (orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                                {
                                    @orderline.GetString("Ecom:Order:OrderLine.Quantity")
                                }
                            </td>
                            <td class="u-ta-right">
                                @if (orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                                {
                                    if (pointsTotal != 0)
                                    {
                                        <span class="u-color--loyalty-points">@orderline.GetDouble("Ecom:Product.PointPrice")</span> @Translate("points")
                                    }
                                    else
                                    {
                                        @orderline.GetString("Ecom:Order:OrderLine.UnitPrice.PriceFormatted").Replace(" ", "&nbsp;")
                                    }
                                }
                            </td>
                            <td class="u-ta-right">
                                @if (pointsTotal != 0)
                                {
                                    <span class="u-color--loyalty-points">@pointsTotal</span> @Translate("points")
                                }
                                else
                                {
                                    @orderline.GetString("Ecom:Order:OrderLine.Price.PriceFormatted").Replace(" ", "&nbsp;")
                                }
                            </td>
                        </tr>

                        foreach (LoopItem bomitem in orderline.GetLoop("BOMItems"))
                        {
                            image = "/Admin/Public/GetImage.ashx?width=60&height=60&crop=0&image=" + bomitem.GetString("Ecom:Product.ImageDefault.Default.Clean");

                            <tr class="active u-color-light-gray--bg">
                                <td width="60">
                                    <img src="@image" alt="@bomitem.GetString("Ecom:Order:OrderLine.ProductName.Short")" />
                                </td>
                                <td>@bomitem.GetString("Ecom:Order:OrderLine.ProductName.Short")</td>
                                <td class="u-ta-right">
                                    @if (bomitem.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                                    {
                                        @bomitem.GetString("Ecom:Order:OrderLine.Quantity")
                                    }
                                </td>
                                <td class="u-ta-right">
                                    @if (bomitem.GetBoolean("Ecom:Order:OrderLine.IsProduct"))
                                    {
                                        @bomitem.GetString("Ecom:Order:OrderLine.UnitPrice.PriceFormatted").Replace(" ", "&nbsp;")
                                    }
                                </td>
                                <td class="u-ta-right">@bomitem.GetString("Ecom:Order:OrderLine.Price.PriceFormatted").Replace(" ", "&nbsp;")</td>
                            </tr>
                        }
                    }

                    <tr>
                        <td colspan="4" class="u-ta-right u-bold">@Translate("Subtotal")</td>
                        <td class="u-ta-right u-bold">@GetString("Ecom:Order.OrderLines.Total.PriceWithoutVAT").Replace(" ", "&nbsp;")</td>
                    </tr>

                    <tr>
                        <td colspan="4" class="u-ta-right">@Translate("VAT") @GetString("Ecom:Order.Price.VATPercentFormatted")</td>
                        <td class="u-ta-right">@GetString("Ecom:Order.Price.VATFormatted").Replace(" ", "&nbsp;")</td>
                    </tr>

                    @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.PaymentMethod")))
                    {
                        <tr>
                            <td colspan="4" class="u-ta-right">
                                @Translate("Payment method")
                                (@GetString("Ecom:Order.PaymentMethod"))
                            </td>
                            <td class="u-ta-right">@GetString("Ecom:Order.PaymentFee.PriceFormatted").Replace(" ", "&nbsp;")</td>
                        </tr>
                    }

                    @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.ShippingMethod")))
                    {
                        <tr>
                            <td colspan="4" class="u-ta-right">
                                @Translate("Shipping method")
                                (@GetString("Ecom:Order.ShippingMethod"))
                            </td>
                            <td class="u-ta-right">@GetString("Ecom:Order.ShippingFee.PriceFormatted").Replace(" ", "&nbsp;")</td>
                        </tr>
                    }
                    @if (GetDouble("Ecom:Order.RewardTotalPoints") > 0)
                    {
                        <tr>
                            <td colspan="4" class="u-ta-right">
                                @Translate("Earnings")
                            </td>
                            <td class="u-ta-right">
                                <span class="u-color--loyalty-points">@GetDouble("Ecom:Order.RewardTotalPoints")</span> @Translate("points")
                            </td>
                        </tr>
                    }
                    <tr class="u-color-light-gray--bg">
                        <th colspan="4" class="u-ta-right">@Translate("Total with VAT")</th>
                        <th class="u-ta-right">@GetString("Ecom:Order.Price.PriceWithVATFormatted").Replace(" ", "&nbsp;")</th>
                    </tr>
                </tbody>
            </table>

            @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.Customer.Comment")))
            {
                <div class="grid__col-12 u-color-light-gray--bg u-border-bottom">
                    <div class="grid">
                        <div class="grid__col-12">
                            <h2 class="u-no-margin">@Translate("Comment")</h2>
                            <div class="u-margin-bottom">@GetString("Ecom:Order.Customer.Comment")</div>
                        </div>
                    </div>
                </div>
            }

            @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.PaymentMethod.RecurringSupport")))
            {
                if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.Recurring.IntervalUnit")))
                {
                    <h2 class="u-no-margin u-padding">@Translate("Recurring order settings")</h2>

                    <table class="table table-cart">
                        <tr>
                            <td>
                                @Translate("Recurring every")
                            </td>
                            <td>
                                @GetString("Ecom:Order.Recurring.Interval")

                                @if (GetInteger("Ecom:Order.Recurring.IntervalUnit") == 0)
                                {
                                <text>@Translate("Days")</text>
                                }
                                @if (GetInteger("Ecom:Order.Recurring.IntervalUnit") == 1)
                                {
                                <text>@Translate("Weeks")</text>
                                }
                                @if (GetInteger("Ecom:Order.Recurring.IntervalUnit") == 2)
                                {
                                <text>@Translate("Months")</text>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Translate("Recurring start date")
                            </td>
                            <td>
                                @GetString("Ecom:Order.Recurring.StartDate.Clean")
                            </td>
                        </tr>
                        @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.Recurring.EndDate.Clean")))
                        {
                        <tr>
                            <td>
                                @Translate("Recurring end date")
                            </td>
                            <td>
                                @GetString("Ecom:Order.Recurring.EndDate.Clean")
                            </td>
                        </tr>
                        }
                    </table>
                }
            }

            @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.HasUsedGiftCards")))
            {
                <h2 class="u-no-margin u-padding">@Translate("Order used gift cards")</h2>

                <table class="table table-responsive">
                    <tr>
                        <td>@Translate("Gift card name")</td>
                        <td>@Translate("Gift card code")</td>
                        <td>@Translate("Expiry date")</td>
                        <td class="u-ta-right">@Translate("Initial amount")</td>
                        <td class="u-ta-right">@Translate("Used amount")</td>
                        <td class="u-ta-right">@Translate("Remaining balance")</td>
                    </tr>

                    @foreach (LoopItem usedgiftcards in GetLoop("UsedGiftCards"))
                    {
                    <tr>
                        <td>@usedgiftcards.GetString("Ecom:Order.UsedGiftCard.Name")</td>
                        <td>@usedgiftcards.GetString("Ecom:Order.UsedGiftCard.Code")</td>
                        <td>@usedgiftcards.GetString("Ecom:Order.UsedGiftCard.ExpiryDate")</td>
                        <td class="u-ta-right" title="@usedgiftcards.GetString("Ecom:Order.UsedGiftCard.InitialAmount")">@usedgiftcards.GetString("Ecom:Order.UsedGiftCard.InitialAmount")</td>
                        <td class="u-ta-right" title="@usedgiftcards.GetString("Ecom:Order.UsedGiftCard.UsedAmountForTheOrder")">@usedgiftcards.GetString("Ecom:Order.UsedGiftCard.UsedAmountForTheOrder")</td>
                        <td class="u-ta-right" title="@usedgiftcards.GetString("Ecom:Order.UsedGiftCard.RemainingBalance")">@usedgiftcards.GetString("Ecom:Order.UsedGiftCard.RemainingBalance")</td>
                    </tr>
                    }
                </table>
            }

            @{
                string voucherCode = GetString("Ecom:Order.Customer.VoucherCode");
                if (!string.IsNullOrWhiteSpace(voucherCode))
                {
                    string orderId = GetString("Ecom:Order.ID");
                    Order order = new OrderService().GetOrder(orderId);

                    IEnumerable<string> codes = new List<string>();

                    if (order.VoucherUseType.HasFlag(VoucherUseCategoryType.Discount))
                    {
                        codes = voucherCode.Split(new string[] { ",", ";", " " }, StringSplitOptions.RemoveEmptyEntries);
                    }
                    else
                    {
                        codes = new string[] { voucherCode.Trim() };
                    }

                    bool hasUsedVouchers = false;
                    List<string> voucherCodes = new List<string>();
                    foreach (string code in codes)
                    {
                        Voucher vouch = Voucher.GetVoucherByCode(code);
                        if (vouch != null && vouch.DateUsed.HasValue && string.Equals(vouch.UsedOrderId, orderId, StringComparison.OrdinalIgnoreCase))
                        {
                            voucherCodes.Add(code);
                            hasUsedVouchers = true;
                        }
                    }

                    if (hasUsedVouchers)
                    {
                        <div class="u-padding">
                            <h2 class="u-no-margin u-margin-bottom">@Translate("Vouchers")</h2>
                            @foreach (string code in voucherCodes)
                            {
                                <div class="u-padding-bottom">@Translate("Voucher") <span class=u-bold>@code</span> @Translate("has been used").</div>
                            }
                        </div>
                    }
                }
            }

            @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.HasGiftCards")))
            {
                <h2 class="u-no-margin u-padding">@Translate("Giftcards bought on this order")</h2>

                <table class="table table-cart">
                    <tr>
                        <td>@Translate("Gift card name")</td>
                        <td>@Translate("Gift card code")</td>
                        <td>@Translate("Expiry date")</td>
                        <td class="u-ta-right">@Translate("Gift card amount")</td>
                    </tr>

                    @foreach (LoopItem giftcards in GetLoop("GiftCards"))
                    {
                    <tr>
                        <td>@giftcards.GetString("Ecom:Order.GiftCard.Name")</td>
                        <td>@giftcards.GetString("Ecom:Order.GiftCard.Code")</td>
                        <td>@giftcards.GetString("Ecom:Order.GiftCard.ExpiryDate")</td>
                        <td class="u-ta-right" title="@giftcards.GetString("Ecom:Order.GiftCard.Amount")">@giftcards.GetString("Ecom:Order.GiftCard.Amount")</td>
                    </tr>
                    }
                </table>
            }
        </div>


        <div class="grid__col-12 u-color-light-gray--bg">
            <div class="grid">
                <div class="grid__col-lg-auto grid__col-md-auto grid__col-sm-12 grid__col-xs-12">
                    <h5 class="u-no-margin"><i class="fas fa-home"></i> @Translate("Billing address")</h5>
                    <div class="grid__cell">
                        <div>@GetString("Ecom:Order.Customer.Company")</div>
                        <div>@GetString("Ecom:Order.Customer.Name")</div>
                        <div>@GetString("Ecom:Order.Customer.Address")</div>
                        <div>@GetString("Ecom:Order.Customer.Address2")</div>
                        <div>@GetString("Ecom:Order.Customer.Zip") @GetString("Ecom:Order.Customer.City"), @GetString("Ecom:Order.Customer.Country")</div>
                        @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.Customer.Email")))
                        {
                            <div>@Translate("Email"): @GetString("Ecom:Order.Customer.Email")</div>
                        }
                        @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.Customer.Phone")))
                        {
                            <div>@Translate("Phone"): @GetString("Ecom:Order.Customer.Phone")</div>
                        }
                    </div>
                </div>

                @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.Delivery.Address")))
                {
                    <div class="grid__col-lg-auto grid__col-md-auto grid__col-sm-12 grid__col-xs-12">
                        <h5 class="u-no-margin"><i class="fas fa-truck"></i> @Translate("Shipping address")</h5>
                        <div class="grid__cell">
                            <div>@GetString("Ecom:Order.Delivery.Company")</div>
                            <div>@GetString("Ecom:Order.Delivery.Name")</div>
                            <div>@GetString("Ecom:Order.Delivery.Address")</div>
                            <div>@GetString("Ecom:Order.Delivery.Address2")</div>
                            <div>@GetString("Ecom:Order.Delivery.Zip") @GetString("Ecom:Order.Delivery.City"), @GetString("Ecom:Order.Delivery.Country")</div>
                            @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.Delivery.Email")))
                            {
                            <div>@Translate("Email"): @GetString("Ecom:Order.Delivery.Email")</div>
                            }
                            @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.Delivery.Phone")))
                            {
                            <div>@Translate("Phone"): @GetString("Ecom:Order.Delivery.Phone")</div>
                            }
                        </div>
                    </div>
                }

                @if (Pageview.AreaSettings.GetItem("Settings").GetItem("Address") != null && !string.IsNullOrWhiteSpace(businessAddress))
                {
                    <div class="grid__col-lg-auto grid__col-md-auto grid__col-sm-12 grid__col-xs-12">
                        <h5 class="u-no-margin"><i class="fas fa-building"></i> @Translate("Shop information")</h5>
                        <div class="grid__cell">
                            <div>@businessName</div>
                            <div>@businessAddress</div>
                            <div>@businessZip @businessCity, @businessCountry</div>
                            @if (!string.IsNullOrWhiteSpace(businessCVR))
                            {
                                <div>@Translate("Business number"): @businessCVR</div>
                            }
                        </div>
                    </div>
                }

                <div class="grid__col-lg-auto grid__col-md-auto grid__col-sm-12 grid__col-xs-12">
                    <h5 class="u-no-margin"><i class="fas fa-credit-card"></i> @Translate("Payment and shipping")</h5>
                    <div class="grid__cell">
                        @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.PaymentMethod")))
                        {
                            <div>@Translate("Payment method"): @GetString("Ecom:Order.PaymentMethod")</div>
                        }

                        @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.ShippingMethod")))
                        {
                            <div>@Translate("Shipping method"): @GetString("Ecom:Order.ShippingMethod")</div>
                        }

                        @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.TransactionCardNumber")))
                        {
                            <div>@Translate("Card no.") @GetString("Ecom:Order.TransactionCardNumber")</div>
                        }

                        @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.TransactionNumber")))
                        {
                            <div>@Translate("Transaction no.") @GetString("Ecom:Order.TransactionNumber")</div>
                        }

                        @if (!string.IsNullOrWhiteSpace(GetString("Ecom:Order.TransactionStatus")))
                        {
                            <div>@Translate("Transaction state"): @GetString("Ecom:Order.TransactionStatus")</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>