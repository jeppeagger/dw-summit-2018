@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Core
@using System
@using System.Web
@using System.Collections.Generic
@using Dynamicweb.Rapido.Blocks

@{
    BlocksPage paymentCheckoutPage = BlocksPage.GetBlockPage("CheckoutPage");
    bool pointShop = !String.IsNullOrEmpty(Pageview.AreaSettings.GetItem("Ecommerce").GetString("PointShopOnly")) ? Pageview.AreaSettings.GetItem("Ecommerce").GetBoolean("PointShopOnly") : false;

    if (!Pageview.AreaSettings.GetItem("Ecommerce").GetItem("Checkout").GetBoolean("HidePayment") && GetLoop("Paymethods").Count != 0 && !pointShop)
    {
        Block paymentBlock = new Block()
        {
            Id = "Payment",
            SortId = 10,
            Template = RenderPayment(),
            Design = new Design
            {
                RenderType = RenderType.Column,
                Size = "6"
            }
        };
        paymentCheckoutPage.Add("OrderContainerRow", paymentBlock);
    }
}

@helper RenderPayment() {
    string cardHeightClass = Pageview.Device.ToString() != "Tablet" ? "u-full-height" : "";
    string savedCardName = "";

    <div class="card-header u-color-light--bg dw-mod">
        <h3><i class="fas fa-credit-card"></i> @Translate("Payment")</h3>
    </div>

    <div class="card u-color-light--bg @cardHeightClass dw-mod">
        @foreach (LoopItem payment in GetLoop("Paymethods"))
        {
            bool supportSavedCards = payment.GetBoolean("Ecom:Cart.Paymethod.SupportSavedCard") && Dynamicweb.Core.Converter.ToBoolean(GetGlobalValue("Global:Extranet.UserName"));
            string cardIsSaved = !String.IsNullOrEmpty(payment.GetString("Ecom:Order.SavedCardName")) ? "checked" : "";
            string selected = payment.GetBoolean("Ecom:Cart.Paymethod.IsSelected") ? "checked" : "";

            <div>
                <div class="form__field-group u-margin-bottom">
                    <input class="form__control" data-expand="savedCards_@payment.GetString("Ecom:Cart.Paymethod.Name")" onchange="Cart.DeselectRadioGroup('EcomCartSavedCardID'); Cart.SubmitCart()" type="radio" name="EcomCartPaymethodID" id="EcomCartPaymethodID_@payment.GetString("Ecom:Cart.Paymethod.ID")" value="@payment.GetString("Ecom:Cart.Paymethod.ID")" @selected />
                    <label for="EcomCartPaymethodID_@payment.GetString("Ecom:Cart.Paymethod.ID")" class="u-inline">@payment.GetString("Ecom:Cart.Paymethod.Name")</label>
                </div>
                @if (supportSavedCards)
                {
                <div class="expandable--collapsed dw-mod" data-trigger="savedCards_@payment.GetString("Ecom:Cart.Paymethod.Name")">
                    <div class="u-border-top u-border-bottom u-padding u-margin-bottom show">
                        <div class="form__field-group u-margin-bottom">
                            <input type="checkbox" class="form__control" name="EcomOrderSavedCardCreate" id="EcomOrderSavedCardCreate_@payment.GetString("Ecom:Cart.Paymethod.ID")" value="true" @cardIsSaved />
                            <label for="EcomOrderSavedCardCreate_@payment.GetString("Ecom:Cart.Paymethod.ID")">@Translate("Save used card")</label>
                        </div>
                        <div>
                            <input type="text" class="u-full-width u-no-margin" onkeyup="document.getElementById('MySavedCardName').value = this.value;" placeholder="@Translate("Saved card name")" value="@payment.GetString("Ecom:Order.SavedCardName")" />
                        </div>
                    </div>
                </div>
                }
            </div>
        }

        @if (GetLoop("SavedCards").Count > 0)
        {
        <div class="u-bold u-margin-top">@Translate("Pay with a saved card")</div>

            foreach (LoopItem card in GetLoop("SavedCards"))
            {
                string selected = card.GetBoolean("Ecom:SavedCard.IsSelected") ? "checked" : "";

                <div>
                    <input onchange="Cart.DeselectRadioGroup('EcomCartPaymethodID'); Cart.SubmitCart()" class="form__control" type="radio" name="EcomCartSavedCardID" id="EcomCartSavedCardID" value="@card.GetString("Ecom:SavedCard.ID")" @selected />
                    <label for="EcomCartSavedCardID" class="u-inline u-margin-bottom">@card.GetString("Ecom:SavedCard.Name")</label>
                </div>

                if (!String.IsNullOrEmpty(selected))
                {
                    savedCardName = card.GetString("Ecom:SavedCard.Name");
                }
            }
        }

        <input type="hidden" name="EcomOrderSavedCardName" id="MySavedCardName" value="@savedCardName" />
    </div>
}