@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Core
@using System
@using System.Web
@using System.Collections.Generic
@using Dynamicweb.Rapido.Blocks

@functions{ 
    BlocksPage productVideoPage = BlocksPage.GetBlockPage("Product");
}

@{ 
    string videosLayout = Pageview.AreaSettings.GetItem("ProductPage").GetString("VideosLayout") != null ? Pageview.AreaSettings.GetItem("ProductPage").GetList("VideosLayout").SelectedValue : "Section";
    videosLayout = videosLayout == "Ribbon" || string.IsNullOrEmpty(videosLayout) ? "Section" : videosLayout;

    int videosCount = 0;

    foreach (LoopItem detailField in GetLoop("Details"))
    {
        if (detailField.GetString("Ecom:Product:Detail.Text").IndexOf("iframe") != -1 && detailField.GetString("Ecom:Product:Detail.Text").IndexOf("youtube.com/embed") != -1)
        {
            videosCount++;
        }
        if (detailField.GetString("Ecom:Product:Detail.Text").IndexOf("iframe") != -1 && detailField.GetString("Ecom:Product:Detail.Text").IndexOf("vimeo.com") != -1)
        {
            videosCount++;
        }
    }

    if (videosCount > 0 && videosLayout != "hide")
    {
        Block detailsVideos = new Block()
        {
            Name = videosLayout != "MainInformation" ? Translate("Videos") : "",
            Id = "Videos",
            SortId = 60,
            Template = ProductVideos(videosCount, videosLayout),
            Design = new Design
            {
                Size = "12",
                RenderType = RenderType.Column,
                HidePadding = true
            }
        };
        productVideoPage.Add(videosLayout, detailsVideos);
    }
}

@helper ProductVideos(int videosCount, string layout) { 
    string videoColumn = "12";
    videoColumn = videosCount == 2 ? "6" : videoColumn;
    videoColumn = videosCount > 2 ? "4" : videoColumn;
    string ribbonClasses = Pageview.AreaSettings.GetItem("ProductPage").GetList("VideosLayout").SelectedValue == "Ribbon" ? "product__section--ribbon paragraph-container paragraph-container--full-width" : "";
    string ribbonSubClasses = Pageview.AreaSettings.GetItem("ProductPage").GetList("VideosLayout").SelectedValue == "Ribbon" ? "u-padding--lg" : "";

    <div class="product__section @ribbonClasses dw-mod">
        <div class="center-container @ribbonSubClasses dw-mod">
            @if (layout == "Section") {
               <h2>@Translate("Videos")</h2>
            }

            <div class="grid grid--external-bleed-x u-margin-bottom--lg">
                @foreach (LoopItem detailField in GetLoop("Details"))
                {
                    if (detailField.GetString("Ecom:Product:Detail.Text").IndexOf("iframe") != -1 && detailField.GetString("Ecom:Product:Detail.Text").IndexOf("youtube.com/embed") != -1 || detailField.GetString("Ecom:Product:Detail.Text").IndexOf("iframe") != -1 && detailField.GetString("Ecom:Product:Detail.Text").IndexOf("vimeo.com") != -1)
                    {
                        <div class="grid__col-md-@videoColumn grid__col-lg-@videoColumn">
                            <div class="video-wrapper">
                                @detailField.GetString("Ecom:Product:Detail.Text")
                            </div>
                        </div>
                    }
                }
            </div>
            </div>
    </div>
}